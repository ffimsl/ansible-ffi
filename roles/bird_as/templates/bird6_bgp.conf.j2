# BGP Templates

template bgp default_ibgp {
        local as {{ as_number }};
        direct;
        next hop self;
        bfd graceful;
	rr client;
        import filter internal_in;
        export filter internal_out;
}

template bgp default_ibgp_downstreams {
        local as {{ as_number }};
        direct;
        next hop self;
        bfd graceful;
        import filter own_subnet_morespec;
        export filter own_subnet_morespec;
}

template bgp default_ebgp_ixp {
        local as {{ as_number }};
        import filter ixp_in;
        export filter own_subnet;
}

template bgp cix_ebgp_ixp {
        source address {{ as_v6.cix_local_address }};
        local as {{ as_number }};
        import filter cix_ixp_in;
        export filter own_subnet;
}

template bgp default_ebgp_transit {
        local as {{ as_number }};
        import filter transit_in;
        export filter own_subnet;
}

# iBGP
{% if as_v6.ibgp_cix_address_dict is defined %}{% for ibgp_partner in as_v6.ibgp_cix_address_dict %}
protocol bgp ibgp_cix_xcon_{{ ibgp_partner|replace('-','_') }} from default_ibgp {
        source address {{ as_v6.ibgp_cix_address_dict[ibgp_partner]['source'] }};
        neighbor {{ as_v6.ibgp_cix_address_dict[ibgp_partner]['address'] }} as {{ as_number }};
{% if as_v6.ibgp_cix_address_dict[ibgp_partner]['interface'] is defined %}
        interface "{{ as_v6.ibgp_cix_address_dict[ibgp_partner]['interface'] }}";
{% endif %}
}
{% endfor %}{% endif %}

{% if as_v6.ibgp_direct_dict is defined %}{% for ibgp_partner in as_v6.ibgp_direct_dict %}
protocol bgp ibgp_direct_xcon_{{ ibgp_partner|replace('-','_') }} from default_ibgp {
        source address {{ as_v6.ibgp_direct_dict[ibgp_partner]['source'] }};
        neighbor {{ as_v6.ibgp_direct_dict[ibgp_partner]['address'] }} as {{ as_number }};
{% if as_v6.ibgp_direct_dict[ibgp_partner]['interface'] is defined %}
        interface "{{ as_v6.ibgp_direct_dict[ibgp_partner]['interface'] }}";
{% endif %}
}
{% endfor %}{% endif %}

#iBGP Downstreams
{% for community in as_tunnel_endpoints %}
#{{ community }}
{% for peer in as_tunnel_endpoints[community]["peers"] %}
protocol bgp ibgp_downstream_tun_{{ peer|replace('-','_') }} from default_ibgp_downstreams {
        source address {{ as_v6.gre_tunnel_transfer_network | ansible.utils.ipsubnet(127, as_tunnel_endpoints[community]["peers"][peer]["peer_id"]) | ansible.utils.ipaddr('address') }};
        neighbor {{ as_v6.gre_tunnel_transfer_network | ansible.utils.ipsubnet(127, as_tunnel_endpoints[community]["peers"][peer]["peer_id"]) | ansible.utils.ipaddr('peer') }} as {{ as_tunnel_endpoints[community]["peers"][peer]["remote_as"] }};
}

{% endfor %}

{% endfor %}


# eBGP
# IXPs
{% if as_v6.ebgp_cix is defined %}{% for ebgp_partner in as_v6.ebgp_cix %}
protocol bgp ebgp_cix_{{ ebgp_partner|replace('-','_') }} from cix_ebgp_ixp {
        neighbor {{ as_v6.ebgp_cix[ebgp_partner]['address'] }} as {{ as_v6.ebgp_cix[ebgp_partner]['as'] }};
        password "{{ as_v6.ebgp_cix[ebgp_partner]['password'] }}";
}
{% endfor %}{% endif %}

# Transits
# ...


